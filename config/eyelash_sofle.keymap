#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE   &kp N1        &kp N2     &kp N3    &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8     &kp N9     &kp N0         &none
&kp TAB     &kp Q         &kp W      &kp E     &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I      &kp O      &kp P          &kp BACKSPACE
&kp ESCAPE  &kp A         &kp S      &kp D     &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K      &kp L      &kp SEMI       &kp APOS
&kp LSHFT   &kp Z         &kp X      &kp C     &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA  &kp DOT    &kp FSLH       &kp RSHIFT
&kp C_MUTE  &kp LEFT_ALT  &kp LCTRL  &kp LGUI  &mo 2   &kp SPACE    &kp ENTER        &kp ENTER  &mo 1   &kp RGUI   &kp RCTRL  &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
            label = "Base";
        };

        nav {
            bindings = <
&trans  &trans            &trans          &trans     &trans             &trans    &trans  &trans         &trans        &trans    &trans         &trans             &trans
&trans  &kp LEFT_BRACKET  &kp MINUS       &kp EQUAL  &kp RIGHT_BRACKET  &trans    &trans  &kp PAGE_UP    &kp LC(LEFT)  &kp UP    &kp LC(RIGHT)  &kp LC(BACKSPACE)  &trans
&trans  &kp LEFT_BRACE    &kp UNDERSCORE  &kp PLUS   &kp RIGHT_BRACE    &trans    &trans  &kp PAGE_DOWN  &kp LEFT      &kp DOWN  &kp RIGHT      &kp DELETE         &trans
&trans  &kp LC(Z)         &kp LC(X)       &kp LC(C)  &kp LC(V)          &trans    &trans  &kp CAPSLOCK   &kp HOME      &trans    &kp END        &trans             &trans
&trans  &trans            &trans          &trans     &trans             &trans    &trans  &trans         &trans        &trans    &trans         &trans
            >;

            label = "Nav";
        };

        symbol {
            bindings = <
&kp F12    &kp F1           &kp F2       &kp F3     &kp F4      &kp F5         &trans    &kp F6     &kp F7         &kp F8        &kp F9                &kp F10                &kp F11
&kp GRAVE  &kp N1           &kp N2       &kp N3     &kp N4      &kp N5         &trans    &kp N6     &kp N7         &kp N8        &kp N9                &kp N0                 &kp BACKSLASH
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp DOLLAR  &kp PERCENT    &trans    &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans     &kp LC(Z)        &kp LC(X)    &kp LC(C)  &kp LC(V)   &trans         &kp RBKT  &trans     &trans         &trans        &trans                &trans                 &trans
&trans     &trans           &trans       &trans     &trans      &trans         &trans    &trans     &trans         &trans        &trans                &trans
            >;

            label = "Sym";
        };

        extra {
            bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &trans           &trans    &trans  &sys_reset  &bootloader  &studio_unlock  &trans  &trans  &trans
&trans           &trans           &trans           &trans           &trans           &trans    &trans  &trans      &trans       &trans          &trans  &trans  &trans
&rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &trans    &trans  &trans      &trans       &trans          &trans  &trans  &trans
&rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &trans    &trans  &trans      &trans       &trans          &trans  &trans  &trans
&trans           &trans           &trans           &trans           &trans           &trans    &trans  &trans      &trans       &trans          &trans  &trans
            >;

            label = "Extra";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        extra_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
